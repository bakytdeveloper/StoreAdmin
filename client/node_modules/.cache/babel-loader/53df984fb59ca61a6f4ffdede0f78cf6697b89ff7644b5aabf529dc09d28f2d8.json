{"ast":null,"code":"var _jsxFileName = \"/Users/bakyt/Desktop/Nurlan/StoreAdmin/client/src/components/AdminPanel/AdminPanel.js\",\n  _s = $RefreshSig$();\n// // client/src/components/AdminPanel/AdminPanel.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n//\n// const AdminPanel = () => {\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [image, setImage] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [specifications, setSpecifications] = useState({});\n//     const [editingProductId, setEditingProductId] = useState(null);\n//\n//     const handleAddProduct = async () => {\n//         try {\n//             const newProduct = {\n//                 name,\n//                 description,\n//                 image,\n//                 price: parseFloat(price),\n//                 specifications,\n//             };\n//\n//             await axios.post('http://localhost:3001/api/products', newProduct);\n//             // Очистим поля после добавления\n//             setName('');\n//             setDescription('');\n//             setImage('');\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleEditProduct = async () => {\n//         try {\n//             if (!editingProductId) {\n//                 return;\n//             }\n//\n//             const updatedProduct = {\n//                 price: parseFloat(price),\n//                 specifications,\n//             };\n//\n//             await axios.put(`http://localhost:3001/api/products/${editingProductId}`, updatedProduct);\n//             // Очистим поля после изменения\n//             setEditingProductId(null);\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error editing product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Административная панель</h2>\n//             <label>\n//                 Название товара:\n//                 <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n//             </label>\n//             <label>\n//                 Описание товара:\n//                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n//             </label>\n//             <label>\n//                 Ссылка на изображение:\n//                 <input type=\"text\" value={image} onChange={(e) => setImage(e.target.value)} />\n//             </label>\n//             <label>\n//                 Цена товара:\n//                 <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} />\n//             </label>\n//             <label>\n//                 Характеристики товара (введите в формате \"ключ: значение\"):\n//                 <input type=\"text\" value={specifications} onChange={(e) => setSpecifications(e.target.value)} />\n//             </label>\n//             {editingProductId ? (\n//                 <button onClick={handleEditProduct}>Изменить товар</button>\n//             ) : (\n//                 <button onClick={handleAddProduct}>Добавить товар</button>\n//             )}\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css'\n//\n// const AdminPanel = () => {\n//     const [products, setProducts] = useState([]);\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [image, setImage] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [specifications, setSpecifications] = useState({}); // Изменения тут, характеристики как объект\n//\n//     useEffect(() => {\n//         fetchProducts();\n//     }, []);\n//\n//     const fetchProducts = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:3001/api/products');\n//             setProducts(response.data);\n//         } catch (error) {\n//             console.error('Error fetching products:', error);\n//         }\n//     };\n//\n//     const handleAddProduct = async () => {\n//         try {\n//             const newProduct = {\n//                 name,\n//                 description,\n//                 image,\n//                 price,\n//                 specifications // Изменения тут, отправляем характеристики как объект\n//             };\n//             await axios.post('http://localhost:3001/api/products', newProduct);\n//             fetchProducts();\n//             // Очистка полей после добавления\n//             setName('');\n//             setDescription('');\n//             setImage('');\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Административная панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Добавить новый товар</h3>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Название\"\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Описание\"\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Ссылка на изображение\"\n//                     value={image}\n//                     onChange={(e) => setImage(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Цена\"\n//                     value={price}\n//                     onChange={(e) => setPrice(e.target.value)}\n//                 />\n//                 {/* Изменения тут, поля для характеристик */}\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Характеристика - ключ\"\n//                     onChange={(e) => {\n//                         const key = e.target.value;\n//                         setSpecifications({ ...specifications, [key]: '' });\n//                     }}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Значение\"\n//                     onChange={(e) => {\n//                         const key = Object.keys(specifications)[Object.keys(specifications).length - 1];\n//                         setSpecifications({ ...specifications, [key]: e.target.value });\n//                     }}\n//                 />\n//                 <button onClick={handleAddProduct}>Добавить товар</button>\n//             </div>\n//             <div className=\"product-list\">\n//                 <h3>Список товаров</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button>Редактировать</button>\n//                             <button>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleEditProduct = async () => {\n//         if (!selectedProduct) {\n//             return;\n//         }\n//\n//         const formData = new FormData();\n//         formData.append('name', productName || selectedProduct.name);\n//         formData.append('description', productDescription || selectedProduct.description);\n//         formData.append('type', productType || selectedProduct.type);\n//         formData.append('price', productPrice || selectedProduct.price);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.put(`http://localhost:3001/api/products/${selectedProduct._id}`, formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts(products.map((product) => (product._id === selectedProduct._id ? response.data : product)));\n//             setSelectedProduct(null);\n//\n//             // Очищаем поля после редактирования товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error editing product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     const handleSelectProduct = (product) => {\n//         setSelectedProduct(product);\n//\n//         // Заполняем поля формы данными выбранного товара\n//         setProductName(product.name);\n//         setProductDescription(product.description);\n//         setProductType(product.type);\n//         setProductPrice(product.price);\n//         setProductSpecifications(product.specifications);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>{selectedProduct ? 'Edit Product' : 'Add Product'}</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 {selectedProduct ? (\n//                     <button onClick={handleEditProduct}>Edit Product</button>\n//                 ) : (\n//                     <button onClick={handleAddProduct}>Add Product</button>\n//                 )}\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleSelectProduct(product)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState([{\n//         key: '',\n//         value: ''\n//     }]);\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications([{ key: '', value: '' }]);\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (index, key, value) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleAddField = () => {\n//         setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Админ панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 {/* ... (остальной код добавления товара) */}\n//                 <h4>Specifications</h4>\n//                 {productSpecifications.map((specification, index) => (\n//                     <div key={index} className=\"specification-inputs\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Key\"\n//                             value={specification.key}\n//                             onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Value\"\n//                             value={specification.value}\n//                             onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n//                         />\n//                     </div>\n//                 ))}\n//                 <button onClick={handleAddField}>Добавить поле</button>\n//                 {/* ... (остальной код добавления товара) */}\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState([{\n//         key: '',\n//         value: ''\n//     }]);\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications([{ key: '', value: '' }]);\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (index, key, value) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleAddField = () => {\n//         setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n//     };\n//\n//     const handleDeleteField = (index) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications.splice(index, 1);\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Админ панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 {productSpecifications.map((specification, index) => (\n//                     <div key={index} className=\"specification-inputs\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Key\"\n//                             value={specification.key}\n//                             onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Value\"\n//                             value={specification.value}\n//                             onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n//                         />\n//                         <button onClick={() => handleDeleteField(index)}>Удалить поле</button>\n//                     </div>\n//                 ))}\n//                 <button onClick={handleAddField}>Добавить поле</button>\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState([\n//         {\n//             key: '',\n//             value: ''\n//         }\n//     ]);\n//     const [productImage, setProductImage] = useState(null);\n//     const [previewImage, setPreviewImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications([{ key: '', value: '' }]);\n//             setProductImage(null);\n//             setPreviewImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (index, key, value) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleAddField = () => {\n//         setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n//     };\n//\n//     const handleDeleteField = (index) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications.splice(index, 1);\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     const handleImageChange = (e) => {\n//         const file = e.target.files[0];\n//\n//         if (file) {\n//             const imageUrl = URL.createObjectURL(file);\n//             setPreviewImage(imageUrl);\n//         } else {\n//             setPreviewImage(null);\n//         }\n//\n//         setProductImage(file);\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Админ панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 {productSpecifications.map((specification, index) => (\n//                     <div key={index} className=\"specification-inputs\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Key\"\n//                             value={specification.key}\n//                             onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Value\"\n//                             value={specification.value}\n//                             onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n//                         />\n//                         <button onClick={() => handleDeleteField(index)}>Удалить поле</button>\n//                     </div>\n//                 ))}\n//                 <button onClick={handleAddField}>Добавить поле</button>\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={handleImageChange} />\n//                 {previewImage && (\n//                     <div className=\"image-preview\">\n//                         <img src={previewImage} alt=\"Preview\" />\n//                     </div>\n//                 )}\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState([\n//         {\n//             key: '',\n//             value: ''\n//         }\n//     ]);\n//     const [productImage, setProductImage] = useState(null);\n//     const [previewImage, setPreviewImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications([{ key: '', value: '' }]);\n//             setProductImage(null);\n//             setPreviewImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (index, key, value) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleAddField = () => {\n//         setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n//     };\n//\n//     const handleDeleteField = (index) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications.splice(index, 1);\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     const handleImageChange = (e) => {\n//         const file = e.target.files[0];\n//\n//         if (file) {\n//             const imageUrl = URL.createObjectURL(file);\n//             setPreviewImage(imageUrl);\n//         } else {\n//             setPreviewImage(null);\n//         }\n//\n//         setProductImage(file);\n//     };\n//\n//     const handleRemoveImage = () => {\n//         setProductImage(null);\n//         setPreviewImage(null);\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Админ панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 {productSpecifications.map((specification, index) => (\n//                     <div key={index} className=\"specification-inputs\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Key\"\n//                             value={specification.key}\n//                             onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Value\"\n//                             value={specification.value}\n//                             onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n//                         />\n//                         <button onClick={() => handleDeleteField(index)}>Удалить поле</button>\n//                     </div>\n//                 ))}\n//                 <button onClick={handleAddField}>Добавить поле</button>\n//\n//                 <h4>Image</h4>\n//                 <div className=\"image-upload\">\n//                     <input type=\"file\" onChange={handleImageChange} />\n//                     {previewImage && (\n//                         <div className=\"image-preview\">\n//                             <img src={previewImage} alt=\"Preview\" />\n//                             <button onClick={handleRemoveImage}>&times;</button>\n//                         </div>\n//                     )}\n//                     {!previewImage && <p>Файл не выбран</p>}\n//                 </div>\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n// components/AdminPanel/AdminPanel.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AdminPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [productDescription, setProductDescription] = useState('');\n  const [productType, setProductType] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  const [productSpecifications, setProductSpecifications] = useState([{\n    key: '',\n    value: ''\n  }]);\n  const [productImage, setProductImage] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/products');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleAddProduct = async () => {\n    const formData = new FormData();\n    formData.append('name', productName);\n    formData.append('description', productDescription);\n    formData.append('type', productType);\n    formData.append('price', productPrice);\n    formData.append('specifications', JSON.stringify(productSpecifications));\n    if (productImage) {\n      formData.append('image', productImage);\n    }\n    try {\n      if (editingProduct) {\n        await axios.put(`http://localhost:3001/api/products/${editingProduct._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        const response = await axios.post('http://localhost:3001/api/products', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setProducts([...products, response.data]);\n      }\n      setProductName('');\n      setProductDescription('');\n      setProductType('');\n      setProductPrice('');\n      setProductSpecifications([{\n        key: '',\n        value: ''\n      }]);\n      setProductImage(null);\n      setPreviewImage(null);\n      setEditingProduct(null);\n    } catch (error) {\n      console.error('Error adding/updating product:', error);\n    }\n  };\n  const handleInputChange = (index, key, value) => {\n    const updatedSpecifications = [...productSpecifications];\n    updatedSpecifications[index] = {\n      ...updatedSpecifications[index],\n      [key]: value\n    };\n    setProductSpecifications(updatedSpecifications);\n  };\n  const handleAddField = () => {\n    setProductSpecifications([...productSpecifications, {\n      key: '',\n      value: ''\n    }]);\n  };\n  const handleDeleteField = index => {\n    const updatedSpecifications = [...productSpecifications];\n    updatedSpecifications.splice(index, 1);\n    setProductSpecifications(updatedSpecifications);\n  };\n  const handleEditProduct = productId => {\n    const productToEdit = products.find(product => product._id === productId);\n    if (productToEdit) {\n      setEditingProduct(productToEdit);\n      setProductName(productToEdit.name || '');\n      setProductDescription(productToEdit.description || '');\n      setProductType(productToEdit.type || '');\n      setProductPrice(productToEdit.price || '');\n      setProductSpecifications(productToEdit.specifications || [{\n        key: '',\n        value: ''\n      }]);\n      setProductImage(null);\n      setPreviewImage(productToEdit.image || null);\n    }\n  };\n  const handleDeleteProduct = async productId => {\n    try {\n      await axios.delete(`http://localhost:3001/api/products/${productId}`);\n      setProducts(products.filter(product => product._id !== productId));\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setPreviewImage(imageUrl);\n    } else {\n      setPreviewImage(null);\n    }\n    setProductImage(file);\n  };\n  const handleRemoveImage = () => {\n    setProductImage(null);\n    setPreviewImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0410\\u0434\\u043C\\u0438\\u043D \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1403,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-product\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add/Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1405,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: productName,\n        onChange: e => setProductName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1406,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: productDescription,\n        onChange: e => setProductDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1407,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type\",\n        value: productType,\n        onChange: e => setProductType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1408,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        value: productPrice,\n        onChange: e => setProductPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1409,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Specifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1411,\n        columnNumber: 17\n      }, this), Array.isArray(productSpecifications) && productSpecifications.map((specification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"specification-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Key\",\n          value: specification.key,\n          onChange: e => handleInputChange(index, 'key', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Value\",\n          value: specification.value,\n          onChange: e => handleInputChange(index, 'value', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteField(index),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddField,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1430,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 21\n        }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewImage,\n            alt: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRemoveImage,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1438,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 25\n        }, this), !previewImage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0424\\u0430\\u0439\\u043B \\u043D\\u0435 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1433,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProduct,\n        children: \"Add/Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1444,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1404,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1448,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [product.name, \" - \", product.price, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditProduct(product._id),\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteProduct(product._id),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1454,\n            columnNumber: 29\n          }, this)]\n        }, product._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1402,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPanel, \"RD0up0kqjJ9TXcBfCjCI1ZjdKho=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPanel","_s","productName","setProductName","productDescription","setProductDescription","productType","setProductType","productPrice","setProductPrice","productSpecifications","setProductSpecifications","key","value","productImage","setProductImage","previewImage","setPreviewImage","editingProduct","setEditingProduct","products","setProducts","fetchProducts","response","get","data","error","console","handleAddProduct","formData","FormData","append","JSON","stringify","put","_id","headers","post","handleInputChange","index","updatedSpecifications","handleAddField","handleDeleteField","splice","handleEditProduct","productId","productToEdit","find","product","name","description","type","price","specifications","image","handleDeleteProduct","delete","filter","handleImageChange","e","file","target","files","imageUrl","URL","createObjectURL","handleRemoveImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","Array","isArray","map","specification","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/bakyt/Desktop/Nurlan/StoreAdmin/client/src/components/AdminPanel/AdminPanel.js"],"sourcesContent":["// // client/src/components/AdminPanel/AdminPanel.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n//\n// const AdminPanel = () => {\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [image, setImage] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [specifications, setSpecifications] = useState({});\n//     const [editingProductId, setEditingProductId] = useState(null);\n//\n//     const handleAddProduct = async () => {\n//         try {\n//             const newProduct = {\n//                 name,\n//                 description,\n//                 image,\n//                 price: parseFloat(price),\n//                 specifications,\n//             };\n//\n//             await axios.post('http://localhost:3001/api/products', newProduct);\n//             // Очистим поля после добавления\n//             setName('');\n//             setDescription('');\n//             setImage('');\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleEditProduct = async () => {\n//         try {\n//             if (!editingProductId) {\n//                 return;\n//             }\n//\n//             const updatedProduct = {\n//                 price: parseFloat(price),\n//                 specifications,\n//             };\n//\n//             await axios.put(`http://localhost:3001/api/products/${editingProductId}`, updatedProduct);\n//             // Очистим поля после изменения\n//             setEditingProductId(null);\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error editing product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Административная панель</h2>\n//             <label>\n//                 Название товара:\n//                 <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n//             </label>\n//             <label>\n//                 Описание товара:\n//                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n//             </label>\n//             <label>\n//                 Ссылка на изображение:\n//                 <input type=\"text\" value={image} onChange={(e) => setImage(e.target.value)} />\n//             </label>\n//             <label>\n//                 Цена товара:\n//                 <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} />\n//             </label>\n//             <label>\n//                 Характеристики товара (введите в формате \"ключ: значение\"):\n//                 <input type=\"text\" value={specifications} onChange={(e) => setSpecifications(e.target.value)} />\n//             </label>\n//             {editingProductId ? (\n//                 <button onClick={handleEditProduct}>Изменить товар</button>\n//             ) : (\n//                 <button onClick={handleAddProduct}>Добавить товар</button>\n//             )}\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css'\n//\n// const AdminPanel = () => {\n//     const [products, setProducts] = useState([]);\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [image, setImage] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [specifications, setSpecifications] = useState({}); // Изменения тут, характеристики как объект\n//\n//     useEffect(() => {\n//         fetchProducts();\n//     }, []);\n//\n//     const fetchProducts = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:3001/api/products');\n//             setProducts(response.data);\n//         } catch (error) {\n//             console.error('Error fetching products:', error);\n//         }\n//     };\n//\n//     const handleAddProduct = async () => {\n//         try {\n//             const newProduct = {\n//                 name,\n//                 description,\n//                 image,\n//                 price,\n//                 specifications // Изменения тут, отправляем характеристики как объект\n//             };\n//             await axios.post('http://localhost:3001/api/products', newProduct);\n//             fetchProducts();\n//             // Очистка полей после добавления\n//             setName('');\n//             setDescription('');\n//             setImage('');\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Административная панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Добавить новый товар</h3>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Название\"\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Описание\"\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Ссылка на изображение\"\n//                     value={image}\n//                     onChange={(e) => setImage(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Цена\"\n//                     value={price}\n//                     onChange={(e) => setPrice(e.target.value)}\n//                 />\n//                 {/* Изменения тут, поля для характеристик */}\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Характеристика - ключ\"\n//                     onChange={(e) => {\n//                         const key = e.target.value;\n//                         setSpecifications({ ...specifications, [key]: '' });\n//                     }}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Значение\"\n//                     onChange={(e) => {\n//                         const key = Object.keys(specifications)[Object.keys(specifications).length - 1];\n//                         setSpecifications({ ...specifications, [key]: e.target.value });\n//                     }}\n//                 />\n//                 <button onClick={handleAddProduct}>Добавить товар</button>\n//             </div>\n//             <div className=\"product-list\">\n//                 <h3>Список товаров</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button>Редактировать</button>\n//                             <button>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleEditProduct = async () => {\n//         if (!selectedProduct) {\n//             return;\n//         }\n//\n//         const formData = new FormData();\n//         formData.append('name', productName || selectedProduct.name);\n//         formData.append('description', productDescription || selectedProduct.description);\n//         formData.append('type', productType || selectedProduct.type);\n//         formData.append('price', productPrice || selectedProduct.price);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.put(`http://localhost:3001/api/products/${selectedProduct._id}`, formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts(products.map((product) => (product._id === selectedProduct._id ? response.data : product)));\n//             setSelectedProduct(null);\n//\n//             // Очищаем поля после редактирования товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error editing product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     const handleSelectProduct = (product) => {\n//         setSelectedProduct(product);\n//\n//         // Заполняем поля формы данными выбранного товара\n//         setProductName(product.name);\n//         setProductDescription(product.description);\n//         setProductType(product.type);\n//         setProductPrice(product.price);\n//         setProductSpecifications(product.specifications);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>{selectedProduct ? 'Edit Product' : 'Add Product'}</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 {selectedProduct ? (\n//                     <button onClick={handleEditProduct}>Edit Product</button>\n//                 ) : (\n//                     <button onClick={handleAddProduct}>Add Product</button>\n//                 )}\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleSelectProduct(product)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState([{\n//         key: '',\n//         value: ''\n//     }]);\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications([{ key: '', value: '' }]);\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (index, key, value) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleAddField = () => {\n//         setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Админ панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 {/* ... (остальной код добавления товара) */}\n//                 <h4>Specifications</h4>\n//                 {productSpecifications.map((specification, index) => (\n//                     <div key={index} className=\"specification-inputs\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Key\"\n//                             value={specification.key}\n//                             onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Value\"\n//                             value={specification.value}\n//                             onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n//                         />\n//                     </div>\n//                 ))}\n//                 <button onClick={handleAddField}>Добавить поле</button>\n//                 {/* ... (остальной код добавления товара) */}\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState([{\n//         key: '',\n//         value: ''\n//     }]);\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications([{ key: '', value: '' }]);\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (index, key, value) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleAddField = () => {\n//         setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n//     };\n//\n//     const handleDeleteField = (index) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications.splice(index, 1);\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Админ панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 {productSpecifications.map((specification, index) => (\n//                     <div key={index} className=\"specification-inputs\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Key\"\n//                             value={specification.key}\n//                             onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Value\"\n//                             value={specification.value}\n//                             onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n//                         />\n//                         <button onClick={() => handleDeleteField(index)}>Удалить поле</button>\n//                     </div>\n//                 ))}\n//                 <button onClick={handleAddField}>Добавить поле</button>\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState([\n//         {\n//             key: '',\n//             value: ''\n//         }\n//     ]);\n//     const [productImage, setProductImage] = useState(null);\n//     const [previewImage, setPreviewImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications([{ key: '', value: '' }]);\n//             setProductImage(null);\n//             setPreviewImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (index, key, value) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleAddField = () => {\n//         setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n//     };\n//\n//     const handleDeleteField = (index) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications.splice(index, 1);\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     const handleImageChange = (e) => {\n//         const file = e.target.files[0];\n//\n//         if (file) {\n//             const imageUrl = URL.createObjectURL(file);\n//             setPreviewImage(imageUrl);\n//         } else {\n//             setPreviewImage(null);\n//         }\n//\n//         setProductImage(file);\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Админ панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 {productSpecifications.map((specification, index) => (\n//                     <div key={index} className=\"specification-inputs\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Key\"\n//                             value={specification.key}\n//                             onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Value\"\n//                             value={specification.value}\n//                             onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n//                         />\n//                         <button onClick={() => handleDeleteField(index)}>Удалить поле</button>\n//                     </div>\n//                 ))}\n//                 <button onClick={handleAddField}>Добавить поле</button>\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={handleImageChange} />\n//                 {previewImage && (\n//                     <div className=\"image-preview\">\n//                         <img src={previewImage} alt=\"Preview\" />\n//                     </div>\n//                 )}\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState([\n//         {\n//             key: '',\n//             value: ''\n//         }\n//     ]);\n//     const [productImage, setProductImage] = useState(null);\n//     const [previewImage, setPreviewImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications([{ key: '', value: '' }]);\n//             setProductImage(null);\n//             setPreviewImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (index, key, value) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleAddField = () => {\n//         setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n//     };\n//\n//     const handleDeleteField = (index) => {\n//         const updatedSpecifications = [...productSpecifications];\n//         updatedSpecifications.splice(index, 1);\n//         setProductSpecifications(updatedSpecifications);\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     const handleImageChange = (e) => {\n//         const file = e.target.files[0];\n//\n//         if (file) {\n//             const imageUrl = URL.createObjectURL(file);\n//             setPreviewImage(imageUrl);\n//         } else {\n//             setPreviewImage(null);\n//         }\n//\n//         setProductImage(file);\n//     };\n//\n//     const handleRemoveImage = () => {\n//         setProductImage(null);\n//         setPreviewImage(null);\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Админ панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 {productSpecifications.map((specification, index) => (\n//                     <div key={index} className=\"specification-inputs\">\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Key\"\n//                             value={specification.key}\n//                             onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n//                         />\n//                         <input\n//                             type=\"text\"\n//                             placeholder=\"Value\"\n//                             value={specification.value}\n//                             onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n//                         />\n//                         <button onClick={() => handleDeleteField(index)}>Удалить поле</button>\n//                     </div>\n//                 ))}\n//                 <button onClick={handleAddField}>Добавить поле</button>\n//\n//                 <h4>Image</h4>\n//                 <div className=\"image-upload\">\n//                     <input type=\"file\" onChange={handleImageChange} />\n//                     {previewImage && (\n//                         <div className=\"image-preview\">\n//                             <img src={previewImage} alt=\"Preview\" />\n//                             <button onClick={handleRemoveImage}>&times;</button>\n//                         </div>\n//                     )}\n//                     {!previewImage && <p>Файл не выбран</p>}\n//                 </div>\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n// components/AdminPanel/AdminPanel.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AdminPanel.css';\n\nconst AdminPanel = () => {\n    const [productName, setProductName] = useState('');\n    const [productDescription, setProductDescription] = useState('');\n    const [productType, setProductType] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n    const [productSpecifications, setProductSpecifications] = useState([{ key: '', value: '' }]);\n    const [productImage, setProductImage] = useState(null);\n    const [previewImage, setPreviewImage] = useState(null);\n    const [editingProduct, setEditingProduct] = useState(null);\n\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const response = await axios.get('http://localhost:3001/api/products');\n                setProducts(response.data);\n            } catch (error) {\n                console.error('Error fetching products:', error);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n\n    const handleAddProduct = async () => {\n        const formData = new FormData();\n        formData.append('name', productName);\n        formData.append('description', productDescription);\n        formData.append('type', productType);\n        formData.append('price', productPrice);\n        formData.append('specifications', JSON.stringify(productSpecifications));\n\n        if (productImage) {\n            formData.append('image', productImage);\n        }\n\n        try {\n            if (editingProduct) {\n                await axios.put(`http://localhost:3001/api/products/${editingProduct._id}`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    },\n                });\n            } else {\n                const response = await axios.post('http://localhost:3001/api/products', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    },\n                });\n\n                setProducts([...products, response.data]);\n            }\n\n            setProductName('');\n            setProductDescription('');\n            setProductType('');\n            setProductPrice('');\n            setProductSpecifications([{ key: '', value: '' }]);\n            setProductImage(null);\n            setPreviewImage(null);\n            setEditingProduct(null);\n        } catch (error) {\n            console.error('Error adding/updating product:', error);\n        }\n    };\n\n    const handleInputChange = (index, key, value) => {\n        const updatedSpecifications = [...productSpecifications];\n        updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n        setProductSpecifications(updatedSpecifications);\n    };\n\n    const handleAddField = () => {\n        setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n    };\n\n    const handleDeleteField = (index) => {\n        const updatedSpecifications = [...productSpecifications];\n        updatedSpecifications.splice(index, 1);\n        setProductSpecifications(updatedSpecifications);\n    };\n\n    const handleEditProduct = (productId) => {\n        const productToEdit = products.find((product) => product._id === productId);\n        if (productToEdit) {\n            setEditingProduct(productToEdit);\n            setProductName(productToEdit.name || '');\n            setProductDescription(productToEdit.description || '');\n            setProductType(productToEdit.type || '');\n            setProductPrice(productToEdit.price || '');\n            setProductSpecifications(productToEdit.specifications || [{ key: '', value: '' }]);\n            setProductImage(null);\n            setPreviewImage(productToEdit.image || null);\n        }\n    };\n\n    const handleDeleteProduct = async (productId) => {\n        try {\n            await axios.delete(`http://localhost:3001/api/products/${productId}`);\n            setProducts(products.filter((product) => product._id !== productId));\n        } catch (error) {\n            console.error('Error deleting product:', error);\n        }\n    };\n\n    const handleImageChange = (e) => {\n        const file = e.target.files[0];\n\n        if (file) {\n            const imageUrl = URL.createObjectURL(file);\n            setPreviewImage(imageUrl);\n        } else {\n            setPreviewImage(null);\n        }\n\n        setProductImage(file);\n    };\n\n    const handleRemoveImage = () => {\n        setProductImage(null);\n        setPreviewImage(null);\n    };\n\n    return (\n        <div className=\"admin-panel\">\n            <h2>Админ панель</h2>\n            <div className=\"add-product\">\n                <h3>Add/Edit Product</h3>\n                <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n                <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n                <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n                <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n\n                <h4>Specifications</h4>\n                {Array.isArray(productSpecifications) &&\n                productSpecifications.map((specification, index) => (\n                    <div key={index} className=\"specification-inputs\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Key\"\n                            value={specification.key}\n                            onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Value\"\n                            value={specification.value}\n                            onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n                        />\n                        <button onClick={() => handleDeleteField(index)}>Удалить поле</button>\n                    </div>\n                ))}\n                <button onClick={handleAddField}>Добавить поле</button>\n\n                <h4>Image</h4>\n                <div className=\"image-upload\">\n                    <input type=\"file\" onChange={handleImageChange} />\n                    {previewImage && (\n                        <div className=\"image-preview\">\n                            <img src={previewImage} alt=\"Preview\" />\n                            <button onClick={handleRemoveImage}>&times;</button>\n                        </div>\n                    )}\n                    {!previewImage && <p>Файл не выбран</p>}\n                </div>\n\n                <button onClick={handleAddProduct}>Add/Edit Product</button>\n            </div>\n\n            <div className=\"product-list\">\n                <h3>Product List</h3>\n                <ul>\n                    {products.map((product) => (\n                        <li key={product._id}>\n                            {product.name} - {product.price}\n                            <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n                            <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappingsglD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGhB,QAAQ,CAAC,CAAC;IAAEiB,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC,CAAC;EAC5F,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAM0B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,oCAAoC,CAAC;QACtEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE7B,WAAW,CAAC;IACpC2B,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE3B,kBAAkB,CAAC;IAClDyB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEzB,WAAW,CAAC;IACpCuB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEvB,YAAY,CAAC;IACtCqB,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACvB,qBAAqB,CAAC,CAAC;IAExE,IAAII,YAAY,EAAE;MACde,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEjB,YAAY,CAAC;IAC1C;IAEA,IAAI;MACA,IAAII,cAAc,EAAE;QAChB,MAAMrB,KAAK,CAACqC,GAAG,CAAE,sCAAqChB,cAAc,CAACiB,GAAI,EAAC,EAAEN,QAAQ,EAAE;UAClFO,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;MACN,CAAC,MAAM;QACH,MAAMb,QAAQ,GAAG,MAAM1B,KAAK,CAACwC,IAAI,CAAC,oCAAoC,EAAER,QAAQ,EAAE;UAC9EO,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QAEFf,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC7C;MAEAtB,cAAc,CAAC,EAAE,CAAC;MAClBE,qBAAqB,CAAC,EAAE,CAAC;MACzBE,cAAc,CAAC,EAAE,CAAC;MAClBE,eAAe,CAAC,EAAE,CAAC;MACnBE,wBAAwB,CAAC,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC,CAAC;MAClDE,eAAe,CAAC,IAAI,CAAC;MACrBE,eAAe,CAAC,IAAI,CAAC;MACrBE,iBAAiB,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC;EAED,MAAMY,iBAAiB,GAAGA,CAACC,KAAK,EAAE3B,GAAG,EAAEC,KAAK,KAAK;IAC7C,MAAM2B,qBAAqB,GAAG,CAAC,GAAG9B,qBAAqB,CAAC;IACxD8B,qBAAqB,CAACD,KAAK,CAAC,GAAG;MAAE,GAAGC,qBAAqB,CAACD,KAAK,CAAC;MAAE,CAAC3B,GAAG,GAAGC;IAAM,CAAC;IAChFF,wBAAwB,CAAC6B,qBAAqB,CAAC;EACnD,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzB9B,wBAAwB,CAAC,CAAC,GAAGD,qBAAqB,EAAE;MAAEE,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC,CAAC;EAChF,CAAC;EAED,MAAM6B,iBAAiB,GAAIH,KAAK,IAAK;IACjC,MAAMC,qBAAqB,GAAG,CAAC,GAAG9B,qBAAqB,CAAC;IACxD8B,qBAAqB,CAACG,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;IACtC5B,wBAAwB,CAAC6B,qBAAqB,CAAC;EACnD,CAAC;EAED,MAAMI,iBAAiB,GAAIC,SAAS,IAAK;IACrC,MAAMC,aAAa,GAAG1B,QAAQ,CAAC2B,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACb,GAAG,KAAKU,SAAS,CAAC;IAC3E,IAAIC,aAAa,EAAE;MACf3B,iBAAiB,CAAC2B,aAAa,CAAC;MAChC3C,cAAc,CAAC2C,aAAa,CAACG,IAAI,IAAI,EAAE,CAAC;MACxC5C,qBAAqB,CAACyC,aAAa,CAACI,WAAW,IAAI,EAAE,CAAC;MACtD3C,cAAc,CAACuC,aAAa,CAACK,IAAI,IAAI,EAAE,CAAC;MACxC1C,eAAe,CAACqC,aAAa,CAACM,KAAK,IAAI,EAAE,CAAC;MAC1CzC,wBAAwB,CAACmC,aAAa,CAACO,cAAc,IAAI,CAAC;QAAEzC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC,CAAC;MAClFE,eAAe,CAAC,IAAI,CAAC;MACrBE,eAAe,CAAC6B,aAAa,CAACQ,KAAK,IAAI,IAAI,CAAC;IAChD;EACJ,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAOV,SAAS,IAAK;IAC7C,IAAI;MACA,MAAMhD,KAAK,CAAC2D,MAAM,CAAE,sCAAqCX,SAAU,EAAC,CAAC;MACrExB,WAAW,CAACD,QAAQ,CAACqC,MAAM,CAAET,OAAO,IAAKA,OAAO,CAACb,GAAG,KAAKU,SAAS,CAAC,CAAC;IACxE,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,MAAMgC,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAE9B,IAAIF,IAAI,EAAE;MACN,MAAMG,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MAC1C3C,eAAe,CAAC8C,QAAQ,CAAC;IAC7B,CAAC,MAAM;MACH9C,eAAe,CAAC,IAAI,CAAC;IACzB;IAEAF,eAAe,CAAC6C,IAAI,CAAC;EACzB,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC5BnD,eAAe,CAAC,IAAI,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACIlB,OAAA;IAAKoE,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBrE,OAAA;MAAAqE,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzE,OAAA;MAAKoE,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBrE,OAAA;QAAAqE,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBzE,OAAA;QAAOoD,IAAI,EAAC,MAAM;QAACsB,WAAW,EAAC,MAAM;QAAC5D,KAAK,EAAEX,WAAY;QAACwE,QAAQ,EAAGf,CAAC,IAAKxD,cAAc,CAACwD,CAAC,CAACE,MAAM,CAAChD,KAAK;MAAE;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7GzE,OAAA;QAAOoD,IAAI,EAAC,MAAM;QAACsB,WAAW,EAAC,aAAa;QAAC5D,KAAK,EAAET,kBAAmB;QAACsE,QAAQ,EAAGf,CAAC,IAAKtD,qBAAqB,CAACsD,CAAC,CAACE,MAAM,CAAChD,KAAK;MAAE;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClIzE,OAAA;QAAOoD,IAAI,EAAC,MAAM;QAACsB,WAAW,EAAC,MAAM;QAAC5D,KAAK,EAAEP,WAAY;QAACoE,QAAQ,EAAGf,CAAC,IAAKpD,cAAc,CAACoD,CAAC,CAACE,MAAM,CAAChD,KAAK;MAAE;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7GzE,OAAA;QAAOoD,IAAI,EAAC,MAAM;QAACsB,WAAW,EAAC,OAAO;QAAC5D,KAAK,EAAEL,YAAa;QAACkE,QAAQ,EAAGf,CAAC,IAAKlD,eAAe,CAACkD,CAAC,CAACE,MAAM,CAAChD,KAAK;MAAE;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEhHzE,OAAA;QAAAqE,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtBG,KAAK,CAACC,OAAO,CAAClE,qBAAqB,CAAC,IACrCA,qBAAqB,CAACmE,GAAG,CAAC,CAACC,aAAa,EAAEvC,KAAK,kBAC3CxC,OAAA;QAAiBoE,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBAC7CrE,OAAA;UACIoD,IAAI,EAAC,MAAM;UACXsB,WAAW,EAAC,KAAK;UACjB5D,KAAK,EAAEiE,aAAa,CAAClE,GAAI;UACzB8D,QAAQ,EAAGf,CAAC,IAAKrB,iBAAiB,CAACC,KAAK,EAAE,KAAK,EAAEoB,CAAC,CAACE,MAAM,CAAChD,KAAK;QAAE;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC,eACFzE,OAAA;UACIoD,IAAI,EAAC,MAAM;UACXsB,WAAW,EAAC,OAAO;UACnB5D,KAAK,EAAEiE,aAAa,CAACjE,KAAM;UAC3B6D,QAAQ,EAAGf,CAAC,IAAKrB,iBAAiB,CAACC,KAAK,EAAE,OAAO,EAAEoB,CAAC,CAACE,MAAM,CAAChD,KAAK;QAAE;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CAAC,eACFzE,OAAA;UAAQgF,OAAO,EAAEA,CAAA,KAAMrC,iBAAiB,CAACH,KAAK,CAAE;UAAA6B,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAbhEjC,KAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcV,CACR,CAAC,eACFzE,OAAA;QAAQgF,OAAO,EAAEtC,cAAe;QAAA2B,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEvDzE,OAAA;QAAAqE,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdzE,OAAA;QAAKoE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBrE,OAAA;UAAOoD,IAAI,EAAC,MAAM;UAACuB,QAAQ,EAAEhB;QAAkB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACjDxD,YAAY,iBACTjB,OAAA;UAAKoE,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1BrE,OAAA;YAAKiF,GAAG,EAAEhE,YAAa;YAACiE,GAAG,EAAC;UAAS;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxCzE,OAAA;YAAQgF,OAAO,EAAEb,iBAAkB;YAAAE,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CACR,EACA,CAACxD,YAAY,iBAAIjB,OAAA;UAAAqE,QAAA,EAAG;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAENzE,OAAA;QAAQgF,OAAO,EAAEnD,gBAAiB;QAAAwC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAENzE,OAAA;MAAKoE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBrE,OAAA;QAAAqE,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBzE,OAAA;QAAAqE,QAAA,EACKhD,QAAQ,CAACyD,GAAG,CAAE7B,OAAO,iBAClBjD,OAAA;UAAAqE,QAAA,GACKpB,OAAO,CAACC,IAAI,EAAC,KAAG,EAACD,OAAO,CAACI,KAAK,eAC/BrD,OAAA;YAAQgF,OAAO,EAAEA,CAAA,KAAMnC,iBAAiB,CAACI,OAAO,CAACb,GAAG,CAAE;YAAAiC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7EzE,OAAA;YAAQgF,OAAO,EAAEA,CAAA,KAAMxB,mBAAmB,CAACP,OAAO,CAACb,GAAG,CAAE;YAAAiC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAHpExB,OAAO,CAACb,GAAG;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvE,EAAA,CAxLID,UAAU;AAAAkF,EAAA,GAAVlF,UAAU;AA0LhB,eAAeA,UAAU;AAAC,IAAAkF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}