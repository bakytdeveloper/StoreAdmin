{"ast":null,"code":"var _jsxFileName = \"/Users/bakyt/Desktop/Nurlan/StoreAdmin/client/src/components/AdminPanel/AdminPanel.js\",\n  _s = $RefreshSig$();\n// // client/src/components/AdminPanel/AdminPanel.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n//\n// const AdminPanel = () => {\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [image, setImage] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [specifications, setSpecifications] = useState({});\n//     const [editingProductId, setEditingProductId] = useState(null);\n//\n//     const handleAddProduct = async () => {\n//         try {\n//             const newProduct = {\n//                 name,\n//                 description,\n//                 image,\n//                 price: parseFloat(price),\n//                 specifications,\n//             };\n//\n//             await axios.post('http://localhost:3001/api/products', newProduct);\n//             // Очистим поля после добавления\n//             setName('');\n//             setDescription('');\n//             setImage('');\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleEditProduct = async () => {\n//         try {\n//             if (!editingProductId) {\n//                 return;\n//             }\n//\n//             const updatedProduct = {\n//                 price: parseFloat(price),\n//                 specifications,\n//             };\n//\n//             await axios.put(`http://localhost:3001/api/products/${editingProductId}`, updatedProduct);\n//             // Очистим поля после изменения\n//             setEditingProductId(null);\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error editing product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Административная панель</h2>\n//             <label>\n//                 Название товара:\n//                 <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n//             </label>\n//             <label>\n//                 Описание товара:\n//                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n//             </label>\n//             <label>\n//                 Ссылка на изображение:\n//                 <input type=\"text\" value={image} onChange={(e) => setImage(e.target.value)} />\n//             </label>\n//             <label>\n//                 Цена товара:\n//                 <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} />\n//             </label>\n//             <label>\n//                 Характеристики товара (введите в формате \"ключ: значение\"):\n//                 <input type=\"text\" value={specifications} onChange={(e) => setSpecifications(e.target.value)} />\n//             </label>\n//             {editingProductId ? (\n//                 <button onClick={handleEditProduct}>Изменить товар</button>\n//             ) : (\n//                 <button onClick={handleAddProduct}>Добавить товар</button>\n//             )}\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css'\n//\n// const AdminPanel = () => {\n//     const [products, setProducts] = useState([]);\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [image, setImage] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [specifications, setSpecifications] = useState({}); // Изменения тут, характеристики как объект\n//\n//     useEffect(() => {\n//         fetchProducts();\n//     }, []);\n//\n//     const fetchProducts = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:3001/api/products');\n//             setProducts(response.data);\n//         } catch (error) {\n//             console.error('Error fetching products:', error);\n//         }\n//     };\n//\n//     const handleAddProduct = async () => {\n//         try {\n//             const newProduct = {\n//                 name,\n//                 description,\n//                 image,\n//                 price,\n//                 specifications // Изменения тут, отправляем характеристики как объект\n//             };\n//             await axios.post('http://localhost:3001/api/products', newProduct);\n//             fetchProducts();\n//             // Очистка полей после добавления\n//             setName('');\n//             setDescription('');\n//             setImage('');\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Административная панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Добавить новый товар</h3>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Название\"\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Описание\"\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Ссылка на изображение\"\n//                     value={image}\n//                     onChange={(e) => setImage(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Цена\"\n//                     value={price}\n//                     onChange={(e) => setPrice(e.target.value)}\n//                 />\n//                 {/* Изменения тут, поля для характеристик */}\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Характеристика - ключ\"\n//                     onChange={(e) => {\n//                         const key = e.target.value;\n//                         setSpecifications({ ...specifications, [key]: '' });\n//                     }}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Значение\"\n//                     onChange={(e) => {\n//                         const key = Object.keys(specifications)[Object.keys(specifications).length - 1];\n//                         setSpecifications({ ...specifications, [key]: e.target.value });\n//                     }}\n//                 />\n//                 <button onClick={handleAddProduct}>Добавить товар</button>\n//             </div>\n//             <div className=\"product-list\">\n//                 <h3>Список товаров</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button>Редактировать</button>\n//                             <button>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleEditProduct = async () => {\n//         if (!selectedProduct) {\n//             return;\n//         }\n//\n//         const formData = new FormData();\n//         formData.append('name', productName || selectedProduct.name);\n//         formData.append('description', productDescription || selectedProduct.description);\n//         formData.append('type', productType || selectedProduct.type);\n//         formData.append('price', productPrice || selectedProduct.price);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.put(`http://localhost:3001/api/products/${selectedProduct._id}`, formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts(products.map((product) => (product._id === selectedProduct._id ? response.data : product)));\n//             setSelectedProduct(null);\n//\n//             // Очищаем поля после редактирования товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error editing product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     const handleSelectProduct = (product) => {\n//         setSelectedProduct(product);\n//\n//         // Заполняем поля формы данными выбранного товара\n//         setProductName(product.name);\n//         setProductDescription(product.description);\n//         setProductType(product.type);\n//         setProductPrice(product.price);\n//         setProductSpecifications(product.specifications);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>{selectedProduct ? 'Edit Product' : 'Add Product'}</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 {selectedProduct ? (\n//                     <button onClick={handleEditProduct}>Edit Product</button>\n//                 ) : (\n//                     <button onClick={handleAddProduct}>Add Product</button>\n//                 )}\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleSelectProduct(product)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n// components/AdminPanel/AdminPanel.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AdminPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [productName, setProductName] = useState('');\n  const [productDescription, setProductDescription] = useState('');\n  const [productType, setProductType] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  const [productSpecifications, setProductSpecifications] = useState([{\n    key: '',\n    value: ''\n  }]);\n  const [productImage, setProductImage] = useState(null);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/products');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  const handleAddProduct = async () => {\n    const formData = new FormData();\n    formData.append('name', productName);\n    formData.append('description', productDescription);\n    formData.append('type', productType);\n    formData.append('price', productPrice);\n    formData.append('specifications', JSON.stringify(productSpecifications));\n    if (productImage) {\n      formData.append('image', productImage);\n    }\n    try {\n      const response = await axios.post('http://localhost:3001/api/products', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setProducts([...products, response.data]);\n\n      // Очищаем поля после добавления товара\n      setProductName('');\n      setProductDescription('');\n      setProductType('');\n      setProductPrice('');\n      setProductSpecifications([{\n        key: '',\n        value: ''\n      }]);\n      setProductImage(null);\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n  const handleInputChange = (index, key, value) => {\n    const updatedSpecifications = [...productSpecifications];\n    updatedSpecifications[index] = {\n      ...updatedSpecifications[index],\n      [key]: value\n    };\n    setProductSpecifications(updatedSpecifications);\n  };\n  const handleAddField = () => {\n    setProductSpecifications([...productSpecifications, {\n      key: '',\n      value: ''\n    }]);\n  };\n  const handleEditProduct = productId => {\n    // Обработка редактирования товара\n    console.log('Edit product:', productId);\n  };\n  const handleDeleteProduct = async productId => {\n    try {\n      await axios.delete(`http://localhost:3001/api/products/${productId}`);\n      setProducts(products.filter(product => product._id !== productId));\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0410\\u0434\\u043C\\u0438\\u043D \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-product\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Specifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 17\n      }, this), productSpecifications.map((specification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"specification-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Key\",\n          value: specification.key,\n          onChange: e => handleInputChange(index, 'key', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Value\",\n          value: specification.value,\n          onChange: e => handleInputChange(index, 'value', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddField,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [product.name, \" - \", product.price, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditProduct(product._id),\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteProduct(product._id),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 29\n          }, this)]\n        }, product._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 717,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPanel, \"a/tqHRgxKWr/mnV3OdT0LvQAl10=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminPanel","_s","productName","setProductName","productDescription","setProductDescription","productType","setProductType","productPrice","setProductPrice","productSpecifications","setProductSpecifications","key","value","productImage","setProductImage","products","setProducts","fetchProducts","response","get","data","error","console","handleAddProduct","formData","FormData","append","JSON","stringify","post","headers","handleInputChange","index","updatedSpecifications","handleAddField","handleEditProduct","productId","log","handleDeleteProduct","delete","filter","product","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","specification","type","placeholder","onChange","e","target","onClick","name","price","_c","$RefreshReg$"],"sources":["/Users/bakyt/Desktop/Nurlan/StoreAdmin/client/src/components/AdminPanel/AdminPanel.js"],"sourcesContent":["// // client/src/components/AdminPanel/AdminPanel.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n//\n// const AdminPanel = () => {\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [image, setImage] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [specifications, setSpecifications] = useState({});\n//     const [editingProductId, setEditingProductId] = useState(null);\n//\n//     const handleAddProduct = async () => {\n//         try {\n//             const newProduct = {\n//                 name,\n//                 description,\n//                 image,\n//                 price: parseFloat(price),\n//                 specifications,\n//             };\n//\n//             await axios.post('http://localhost:3001/api/products', newProduct);\n//             // Очистим поля после добавления\n//             setName('');\n//             setDescription('');\n//             setImage('');\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleEditProduct = async () => {\n//         try {\n//             if (!editingProductId) {\n//                 return;\n//             }\n//\n//             const updatedProduct = {\n//                 price: parseFloat(price),\n//                 specifications,\n//             };\n//\n//             await axios.put(`http://localhost:3001/api/products/${editingProductId}`, updatedProduct);\n//             // Очистим поля после изменения\n//             setEditingProductId(null);\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error editing product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Административная панель</h2>\n//             <label>\n//                 Название товара:\n//                 <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n//             </label>\n//             <label>\n//                 Описание товара:\n//                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n//             </label>\n//             <label>\n//                 Ссылка на изображение:\n//                 <input type=\"text\" value={image} onChange={(e) => setImage(e.target.value)} />\n//             </label>\n//             <label>\n//                 Цена товара:\n//                 <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} />\n//             </label>\n//             <label>\n//                 Характеристики товара (введите в формате \"ключ: значение\"):\n//                 <input type=\"text\" value={specifications} onChange={(e) => setSpecifications(e.target.value)} />\n//             </label>\n//             {editingProductId ? (\n//                 <button onClick={handleEditProduct}>Изменить товар</button>\n//             ) : (\n//                 <button onClick={handleAddProduct}>Добавить товар</button>\n//             )}\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css'\n//\n// const AdminPanel = () => {\n//     const [products, setProducts] = useState([]);\n//     const [name, setName] = useState('');\n//     const [description, setDescription] = useState('');\n//     const [image, setImage] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [specifications, setSpecifications] = useState({}); // Изменения тут, характеристики как объект\n//\n//     useEffect(() => {\n//         fetchProducts();\n//     }, []);\n//\n//     const fetchProducts = async () => {\n//         try {\n//             const response = await axios.get('http://localhost:3001/api/products');\n//             setProducts(response.data);\n//         } catch (error) {\n//             console.error('Error fetching products:', error);\n//         }\n//     };\n//\n//     const handleAddProduct = async () => {\n//         try {\n//             const newProduct = {\n//                 name,\n//                 description,\n//                 image,\n//                 price,\n//                 specifications // Изменения тут, отправляем характеристики как объект\n//             };\n//             await axios.post('http://localhost:3001/api/products', newProduct);\n//             fetchProducts();\n//             // Очистка полей после добавления\n//             setName('');\n//             setDescription('');\n//             setImage('');\n//             setPrice('');\n//             setSpecifications({});\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <h2>Административная панель</h2>\n//             <div className=\"add-product\">\n//                 <h3>Добавить новый товар</h3>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Название\"\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Описание\"\n//                     value={description}\n//                     onChange={(e) => setDescription(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Ссылка на изображение\"\n//                     value={image}\n//                     onChange={(e) => setImage(e.target.value)}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Цена\"\n//                     value={price}\n//                     onChange={(e) => setPrice(e.target.value)}\n//                 />\n//                 {/* Изменения тут, поля для характеристик */}\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Характеристика - ключ\"\n//                     onChange={(e) => {\n//                         const key = e.target.value;\n//                         setSpecifications({ ...specifications, [key]: '' });\n//                     }}\n//                 />\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Значение\"\n//                     onChange={(e) => {\n//                         const key = Object.keys(specifications)[Object.keys(specifications).length - 1];\n//                         setSpecifications({ ...specifications, [key]: e.target.value });\n//                     }}\n//                 />\n//                 <button onClick={handleAddProduct}>Добавить товар</button>\n//             </div>\n//             <div className=\"product-list\">\n//                 <h3>Список товаров</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button>Редактировать</button>\n//                             <button>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     const handleEditProduct = (productId) => {\n//         // Обработка редактирования товара\n//         console.log('Edit product:', productId);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>Add Product</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 <button onClick={handleAddProduct}>Add Product</button>\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n//\n//\n// // components/AdminPanel/AdminPanel.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './AdminPanel.css';\n//\n// const AdminPanel = () => {\n//     const [productName, setProductName] = useState('');\n//     const [productDescription, setProductDescription] = useState('');\n//     const [productType, setProductType] = useState('');\n//     const [productPrice, setProductPrice] = useState('');\n//     const [productSpecifications, setProductSpecifications] = useState({});\n//     const [productImage, setProductImage] = useState(null);\n//\n//     const [products, setProducts] = useState([]);\n//     const [selectedProduct, setSelectedProduct] = useState(null);\n//\n//     useEffect(() => {\n//         const fetchProducts = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/api/products');\n//                 setProducts(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching products:', error);\n//             }\n//         };\n//\n//         fetchProducts();\n//     }, []);\n//\n//     const handleAddProduct = async () => {\n//         const formData = new FormData();\n//         formData.append('name', productName);\n//         formData.append('description', productDescription);\n//         formData.append('type', productType);\n//         formData.append('price', productPrice);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.post('http://localhost:3001/api/products', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts([...products, response.data]);\n//\n//             // Очищаем поля после добавления товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n//\n//     const handleEditProduct = async () => {\n//         if (!selectedProduct) {\n//             return;\n//         }\n//\n//         const formData = new FormData();\n//         formData.append('name', productName || selectedProduct.name);\n//         formData.append('description', productDescription || selectedProduct.description);\n//         formData.append('type', productType || selectedProduct.type);\n//         formData.append('price', productPrice || selectedProduct.price);\n//         formData.append('specifications', JSON.stringify(productSpecifications));\n//\n//         if (productImage) {\n//             formData.append('image', productImage);\n//         }\n//\n//         try {\n//             const response = await axios.put(`http://localhost:3001/api/products/${selectedProduct._id}`, formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             setProducts(products.map((product) => (product._id === selectedProduct._id ? response.data : product)));\n//             setSelectedProduct(null);\n//\n//             // Очищаем поля после редактирования товара\n//             setProductName('');\n//             setProductDescription('');\n//             setProductType('');\n//             setProductPrice('');\n//             setProductSpecifications({});\n//             setProductImage(null);\n//         } catch (error) {\n//             console.error('Error editing product:', error);\n//         }\n//     };\n//\n//     const handleInputChange = (key, value) => {\n//         setProductSpecifications({\n//             ...productSpecifications,\n//             [key]: value,\n//         });\n//     };\n//\n//     const handleSelectProduct = (product) => {\n//         setSelectedProduct(product);\n//\n//         // Заполняем поля формы данными выбранного товара\n//         setProductName(product.name);\n//         setProductDescription(product.description);\n//         setProductType(product.type);\n//         setProductPrice(product.price);\n//         setProductSpecifications(product.specifications);\n//     };\n//\n//     const handleDeleteProduct = async (productId) => {\n//         try {\n//             await axios.delete(`http://localhost:3001/api/products/${productId}`);\n//             setProducts(products.filter((product) => product._id !== productId));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"admin-panel\">\n//             <div className=\"add-product\">\n//                 <h3>{selectedProduct ? 'Edit Product' : 'Add Product'}</h3>\n//                 <input type=\"text\" placeholder=\"Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Type\" value={productType} onChange={(e) => setProductType(e.target.value)} />\n//                 <input type=\"text\" placeholder=\"Price\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\n//\n//                 <h4>Specifications</h4>\n//                 <input type=\"text\" placeholder=\"Key\" onChange={(e) => handleInputChange(e.target.value, '')} />\n//                 <input type=\"text\" placeholder=\"Value\" onChange={(e) => handleInputChange('', e.target.value)} />\n//\n//                 <h4>Image</h4>\n//                 <input type=\"file\" onChange={(e) => setProductImage(e.target.files[0])} />\n//\n//                 {selectedProduct ? (\n//                     <button onClick={handleEditProduct}>Edit Product</button>\n//                 ) : (\n//                     <button onClick={handleAddProduct}>Add Product</button>\n//                 )}\n//             </div>\n//\n//             <div className=\"product-list\">\n//                 <h3>Product List</h3>\n//                 <ul>\n//                     {products.map((product) => (\n//                         <li key={product._id}>\n//                             {product.name} - {product.price}\n//                             <button onClick={() => handleSelectProduct(product)}>Редактировать</button>\n//                             <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default AdminPanel;\n\n\n\n\n\n\n\n\n// components/AdminPanel/AdminPanel.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AdminPanel.css';\n\nconst AdminPanel = () => {\n    const [productName, setProductName] = useState('');\n    const [productDescription, setProductDescription] = useState('');\n    const [productType, setProductType] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n    const [productSpecifications, setProductSpecifications] = useState([{\n        key: '',\n        value: ''\n    }]);\n    const [productImage, setProductImage] = useState(null);\n\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const response = await axios.get('http://localhost:3001/api/products');\n                setProducts(response.data);\n            } catch (error) {\n                console.error('Error fetching products:', error);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n\n    const handleAddProduct = async () => {\n        const formData = new FormData();\n        formData.append('name', productName);\n        formData.append('description', productDescription);\n        formData.append('type', productType);\n        formData.append('price', productPrice);\n        formData.append('specifications', JSON.stringify(productSpecifications));\n\n        if (productImage) {\n            formData.append('image', productImage);\n        }\n\n        try {\n            const response = await axios.post('http://localhost:3001/api/products', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            setProducts([...products, response.data]);\n\n            // Очищаем поля после добавления товара\n            setProductName('');\n            setProductDescription('');\n            setProductType('');\n            setProductPrice('');\n            setProductSpecifications([{ key: '', value: '' }]);\n            setProductImage(null);\n        } catch (error) {\n            console.error('Error adding product:', error);\n        }\n    };\n\n    const handleInputChange = (index, key, value) => {\n        const updatedSpecifications = [...productSpecifications];\n        updatedSpecifications[index] = { ...updatedSpecifications[index], [key]: value };\n        setProductSpecifications(updatedSpecifications);\n    };\n\n    const handleAddField = () => {\n        setProductSpecifications([...productSpecifications, { key: '', value: '' }]);\n    };\n\n    const handleEditProduct = (productId) => {\n        // Обработка редактирования товара\n        console.log('Edit product:', productId);\n    };\n\n    const handleDeleteProduct = async (productId) => {\n        try {\n            await axios.delete(`http://localhost:3001/api/products/${productId}`);\n            setProducts(products.filter((product) => product._id !== productId));\n        } catch (error) {\n            console.error('Error deleting product:', error);\n        }\n    };\n\n    return (\n        <div className=\"admin-panel\">\n            <h2>Админ панель</h2>\n            <div className=\"add-product\">\n                <h3>Add Product</h3>\n                {/* ... (остальной код добавления товара) */}\n                <h4>Specifications</h4>\n                {productSpecifications.map((specification, index) => (\n                    <div key={index} className=\"specification-inputs\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Key\"\n                            value={specification.key}\n                            onChange={(e) => handleInputChange(index, 'key', e.target.value)}\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Value\"\n                            value={specification.value}\n                            onChange={(e) => handleInputChange(index, 'value', e.target.value)}\n                        />\n                    </div>\n                ))}\n                <button onClick={handleAddField}>Добавить поле</button>\n                {/* ... (остальной код добавления товара) */}\n            </div>\n\n            <div className=\"product-list\">\n                <h3>Product List</h3>\n                <ul>\n                    {products.map((product) => (\n                        <li key={product._id}>\n                            {product.name} - {product.price}\n                            <button onClick={() => handleEditProduct(product._id)}>Редактировать</button>\n                            <button onClick={() => handleDeleteProduct(product._id)}>Удалить</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminPanel;\n\n\n\n\n\n\n\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}